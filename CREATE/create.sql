-- create table DEPARTMENT1
CREATE TABLE DEPARTMENT1
( DEPTNO CHAR(3) NOT NULL PRIMARY KEY,
  DEPTNAME CHAR(6) NOT NULL,
  MRGNO CHAR(6),
  ADMRDEPT CHAR(3) NOT NULL,
  LOCATION CHAR(16)
);

-- create table PROJECT1
CREATE TABLE PROJECT1
( PROJNO CHAR(6) NOT NULL PRIMARY KEY,
  PROJNAME VARCHAR(24) NOT NULL,
  DEPTNO CHAR(3) NOT NULL,
  RESPEMP CHAR(6) NOT NULL,
  PRSTAFF DECIMAL(5, 2),
  PRSTDATE DATE,
  PRENDATE DATE,
  MAJRPROJ CHAR(6)
);

-- create table MovieStar
CREATE TABLE MovieStar
(NAME CHAR(30) NOT NULL PRIMARY KEY,
ADDRESS VARCHAR (255),
GENDER CHAR(1),
BIRTHDATE DATE DEFAULT CURRENT_DATE
);

-- create table MovieStar
CREATE TABLE MovieStar
(NAME CHAR(30) NOT NULL,
ADDRESS VARCHAR (255),
GENDER CHAR(1),
BIRTHDATE DATE ,
PRIMARY KEY (NAME)
);

-- create table Movie
CREATE TABLE Movie (
    TITLE VARCHAR(50) NOT NULL,
    YEAR INTEGER NOT NULL,
    LENGTH INTEGER,
    INCOLOR CHAR(1),
    STUDIONAME VARCHAR(50),
    PRIMARY KEY (TITLE,YEAR)
);

-- create table Movie
CREATE TABLE Movie (
    TITLE VARCHAR(50) NOT NULL,
    YEAR INTEGER NOT NULL,
    LENGTH INTEGER,
    INCOLOR CHAR(1),
    STUDIONAME VARCHAR(50),
    PRODUCERC# INTEGER,
    UNIQUE (TITLE,YEAR)
);

-- create table MyTable
CREATE TABLE MyTable (
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    YEAR INTEGER NOT NULL,
    LENGTH INTEGER,
    PRIMARY KEY (ID)
);

-- create table StarsIn
CREATE TABLE StarsIn(
    MOVIETITLE VARCHAR(50),
    MOVIEYEAR INTEGER,
    NAME CHAR(30),
    FOREIGN KEY (MOVIETITLE, MOVIEYEAR)
                    REFERENCES Movie(TITLE, YEAR)
);

-- create table EMPLOYEE1
CREATE TABLE EMPLOYEE1 (
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) CONSTRAINT PK_EMP PRIMARY KEY ,
    NAME VARCHAR(50),
    AGE INT CONSTRAINT CK_AGE CHECK ( AGE > 0 ),
    CODE INT,
    MANAGER_ID INT REFERENCES EMPLOYEE1(ID),
    CHECK ( ID != MANAGER_ID )
);
